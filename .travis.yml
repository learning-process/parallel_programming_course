language: cpp

matrix:
  include:
    - os: linux
      dist: xenial
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-5
      env: MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      before_script:
        - python scripts/lint.py

    - os: linux
      dist: bionic
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-8
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8

    - os: linux
      dist: xenial
      compiler: clang
      addons:
        apt:
          packages: clang-5.0
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: linux
      dist: xenial
      compiler: clang

    - os: osx
      osx_image: xcode10.1

    - os: osx
      osx_image: xcode9.4

before_install:
- eval "${MATRIX_EVAL}"

install:
- if [[ $TRAVIS_OS_NAME == 'osx' ]]; then brew update-reset; fi
- if [[ $TRAVIS_OS_NAME == 'osx' ]]; then brew unlink python@2; fi
- if [[ $TRAVIS_OS_NAME == 'osx' ]]; then brew install open-mpi libomp tbb; fi

- if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo apt-get install mpich libmpich-dev; fi
- if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo apt-get install libomp-dev libtbb-dev; fi
- if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sudo apt install texlive*; fi

script:
- git submodule update --init --recursive
- python scripts/lint.py
- mkdir build
- cd build
- cmake -D USE_MPI=ON -D USE_OMP=ON -D USE_TBB=ON -D USE_STD=ON -D USE_LATEX=ON -D CMAKE_BUILD_TYPE=RELEASE ..
- cmake --build . --config -j4
- cd ..
- export OMP_NUM_THREADS=4
- source scripts/run.sh

notifications:
  email: false
